# .github/workflows/publish-codesandbox-templates.yml
name: Build & Publish CodeSandbox Templates

on:
  push:
    paths:
      - '**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      CSB_API_KEY: ${{ secrets.CSB_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Build & publish templates, generate templates.json
        run: |
          set -euo pipefail

          # Discover all template folders (excluding files and .github)
          templates=()
          while IFS= read -r d; do
            templates+=("$d")
          done < <(find . -maxdepth 1 -type d ! -name '.git' ! -name '.vscode' ! -name 'node_modules' ! -name '.' ! -name '.github' -printf '%P\n')

          # Start templates.json
          echo '{' > templates.json

          first=1
          for tmpl in "${templates[@]}"; do
            # Skip empty names
            [ -z "$tmpl" ] && continue

            echo "⏳ Publishing $tmpl..."

            # Build and publish, capture output (store in a temp log)
            LOG=$(mktemp)
            npx @codesandbox/sdk build "$tmpl" --ci > "$LOG" 2>&1 || { cat "$LOG"; exit 1; }

            # Extract templateId from the log
            template_id=$(grep -Eo 'template id: [a-zA-Z0-9]+' "$LOG" | awk '{print $3}' | tail -n1)
            if [ -z "$template_id" ]; then
              echo "❌ Failed to find template id in SDK output for $tmpl"
              cat "$LOG"
              exit 1
            fi

            # Add to templates.json
            [ $first -eq 0 ] && echo ',' >> templates.json
            echo "  \"$tmpl\": { \"templateId\": \"$template_id\" }" >> templates.json
            first=0
            echo "✅ Published $tmpl: $template_id"
          done

          echo '}' >> templates.json

      - name: Commit & push updated templates.json
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: generate templates.json with published template IDs"
          file_pattern: templates.json
